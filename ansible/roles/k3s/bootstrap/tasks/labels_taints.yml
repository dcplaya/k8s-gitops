---
- name: Apply storage annotations
  command: kubectl label --overwrite node {{ item }} node-role.kubernetes.io/storage=true
  loop: "{{ groups['storage'] }}"
  environment:
    KUBECONFIG: "{{ REPO_ROOT }}/kubeconfig"

- name: Apply nfs annotations
  command: kubectl label --overwrite node {{ item }} node-role.kubernetes.io/nfs=true
  loop: "{{ groups['nfs'] }}"
  environment:
    KUBECONFIG: "{{ REPO_ROOT }}/kubeconfig"

- name: Apply longhorn storage annotations
  command: kubectl label --overwrite node {{ item }} node.longhorn.io/create-default-disk=true
  loop: "{{ groups['longhorn_storage'] }}"
  environment:
    KUBECONFIG: "{{ REPO_ROOT }}/kubeconfig"

- name: Apply worker annotations
  command: kubectl label --overwrite node {{ item }} node-role.kubernetes.io/worker=true
  loop: "{{ groups['nodes'] }}"
  environment:
    KUBECONFIG: "{{ REPO_ROOT }}/kubeconfig"

- name: Apply arm taints
  command: kubectl taint --overwrite node {{ item }} node-role.kubernetes.io/arm=true:NoSchedule
  loop: "{{ groups['arm'] }}"
  environment:
    KUBECONFIG: "{{ REPO_ROOT }}/kubeconfig"
  when: devices.arm_in_cluster|bool == true

- name: Apply master taints
  # command: kubectl taint --overwrite node {{ item }} node-role.kubernetes.io/master=true:NoSchedule
  command: kubectl taint --overwrite node {{ item }} CriticalAddonsOnly=true:NoExecute
  loop: "{{ groups['master'] }}"
  environment:
    KUBECONFIG: "{{ REPO_ROOT }}/kubeconfig"

- name: Allow all nodes to run pods (including masters)
  command: kubectl taint nodes --all node-role.kubernetes.io/master-
  environment:
    KUBECONFIG: "{{ REPO_ROOT }}/kubeconfig"
  when: devices.allow_master_pods|bool == true
