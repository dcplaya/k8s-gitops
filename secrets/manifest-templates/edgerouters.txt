---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: external-drew-router
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  rules:
  - host: drew.network.$DOMAIN
    http:
      paths:
      - backend:
          serviceName: external-drew-router
          servicePort: 443
  tls:
  - hosts:
    - drew.network.$DOMAIN
---
apiVersion: v1
kind: Service
metadata:
  name: external-drew-router
spec:
  ports:
  - name: https
    port: 443
  type: ExternalName
  externalName: 10.10.1.1

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: external-jeff-router
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
spec:
  rules:
  - host: jeff.network.$DOMAIN
    http:
      paths:
      - backend:
          serviceName: external-jeff-router
          servicePort: 443
  tls:
  - hosts:
    - jeff.network.$DOMAIN
---
apiVersion: v1
kind: Service
metadata:
  name: external-jeff-router
spec:
  ports:
  - name: https
    port: 443
  type: ExternalName
  externalName: 10.16.1.1

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: external-amber-router
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
spec:
  rules:
  - host: amber.network.$DOMAIN
    http:
      paths:
      - backend:
          serviceName: external-amber-router
          servicePort: 443
  tls:
  - hosts:
    - amber.network.$DOMAIN
---
apiVersion: v1
kind: Service
metadata:
  name: external-amber-router
spec:
  ports:
  - name: https
    port: 443
  type: ExternalName
  externalName: 10.17.1.1
