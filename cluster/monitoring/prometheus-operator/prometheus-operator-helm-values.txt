alertmanager:
  ingress:
    hosts: [prom-alert.$DOMAIN]
    tls:
    - hosts:
      - prom-alert.$DOMAIN
    annotations:
      nginx.ingress.kubernetes.io/auth-url: "https://auth.$DOMAIN/oauth2/auth"
      nginx.ingress.kubernetes.io/auth-signin: https://auth.$DOMAIN/oauth2/start
  config:
    global:
      slack_api_url: $SLACK_WEBHOOK_URL
prometheus:
  ingress:
    hosts: [prom-server.$DOMAIN]
    tls:
    - hosts:
      - prom-server.$DOMAIN
    annotations:
      nginx.ingress.kubernetes.io/auth-url: "https://auth.$DOMAIN/oauth2/auth"
      nginx.ingress.kubernetes.io/auth-signin: https://auth.$DOMAIN/oauth2/start
  prometheusSpec:
    additionalScrapeConfigs:
    - job_name: 'wmi-exporter-scrape'
      metrics_path: '/metrics'
      params:
        format: [prometheus]
      honor_labels: true
      static_configs:
      - targets:
        - nvr:9182
    - job_name: 'node'
      static_configs:
      - targets:
        - proxmox:9100
        - proxmox-b:9100
        - proxmox-c:9100
        - whitebridge:9100
    - job_name: 'home-assistant'
      scrape_interval: 60s
      metrics_path: '/api/prometheus'
      bearer_token: '$PROM_HASS_TOKEN'
      scheme: http
      static_configs:
      - targets: 
        - home-assistant.default.svc:8123
grafana:
  ingress:
    hosts: [grafana.$DOMAIN]
    tls:
    - hosts:
      - grafana.$DOMAIN
  adminPassword: "$GRAFANA_PASSWORD"
  grafana.ini:
    server:
      root_url: https://grafana.${DOMAIN}
    auth.basic:
      disable_login_form: true
    auth.generic_oauth:
      enabled: true
      allow_sign_up: true
      team_ids:
      allowed_organizations:
      name: Auth0
      client_id: $AUTH0_GRAFANA_CLIENT_ID
      client_secret: $AUTH0_GRAFANA_CLIENT_SECRET
      scopes: openid profile email
      auth_url: https://${AUTH0_DOMAIN}.auth0.com/authorize
      token_url: https://${AUTH0_DOMAIN}.auth0.com/oauth/token
      api_url: https://${AUTH0_DOMAIN}.auth0.com/userinfo
